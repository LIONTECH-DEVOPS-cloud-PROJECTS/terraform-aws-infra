# Instance outputs
output "instance_id" {
  description = "ID of the EC2 instance"
  value       = aws_instance.this.id
}

output "instance_arn" {
  description = "ARN of the EC2 instance"
  value       = aws_instance.this.arn
}

output "instance_public_ip" {
  description = "Public IP address of the EC2 instance"
  value       = aws_instance.this.public_ip
  sensitive   = true
}

output "instance_private_ip" {
  description = "Private IP address of the EC2 instance"
  value       = aws_instance.this.private_ip
  sensitive   = true
}

output "instance_public_dns" {
  description = "Public DNS name of the EC2 instance"
  value       = aws_instance.this.public_dns
}

output "instance_private_dns" {
  description = "Private DNS name of the EC2 instance"
  value       = aws_instance.this.private_dns
}

output "instance_availability_zone" {
  description = "Availability zone where the instance is deployed"
  value       = aws_instance.this.availability_zone
}

# Security outputs
output "security_group_id" {
  description = "ID of the security group created for the instance"
  value       = length(aws_security_group.ec2_sg) > 0 ? aws_security_group.ec2_sg[0].id : null
}

output "security_group_arn" {
  description = "ARN of the security group created for the instance"
  value       = length(aws_security_group.ec2_sg) > 0 ? aws_security_group.ec2_sg[0].arn : null
}

# Key pair outputs
output "key_pair_name" {
  description = "Name of the key pair used for the instance"
  value       = coalesce(var.key_name, try(aws_key_pair.generated[0].key_name, null))
}

output "private_key_pem" {
  description = "Private key material in PEM format (only if key was generated by this module)"
  value       = var.key_name == null ? tls_private_key.this[0].private_key_pem : null
  sensitive   = true
}

# Volume outputs
output "root_volume_id" {
  description = "ID of the root EBS volume"
  value       = aws_instance.this.root_block_device[0].volume_id
}

output "additional_volume_ids" {
  description = "IDs of additional EBS volumes"
  value       = { for k, v in aws_ebs_volume.additional : k => v.id }
}

# Connection information
output "ssh_connection_command" {
  description = "SSH connection command to the instance"
  value       = var.key_name == null ? "ssh -i ${local_file.private_key[0].filename} ec2-user@${aws_instance.this.public_ip}" : "ssh -i /path/to/your/key.pem ec2-user@${aws_instance.this.public_ip}"
  sensitive   = true
}

# Save private key to file if generated
resource "local_file" "private_key" {
  count = var.key_name == null ? 1 : 0

  content         = tls_private_key.this[0].private_key_pem
  filename        = "${path.root}/${var.instance_name}-key.pem"
  file_permission = "0600"

  depends_on = [tls_private_key.this]
}